/*
IF NOT EXISTS(SELECT BRANCH,CURRENCY,GL_CODE,REMAINING_BUDGET,GL_GROUP_NAME,MAX_AMOUNT,COST_CENTER,GL_NAME,GL_GROUP_CODE,PROKER_ID,BUDGET_YEAR,BUDGET_MONTH,MIN_AMOUNT,RESERVED_AMOUNT,REALIZATION FROM Promise_Budget WHERE GL_CODE =2123)
	INSERT INTO Promise_Budget(BRANCH,CURRENCY,GL_CODE,REMAINING_BUDGET,GL_GROUP_NAME,MAX_AMOUNT,COST_CENTER,GL_NAME,GL_GROUP_CODE,PROKER_ID,BUDGET_YEAR,BUDGET_MONTH,MIN_AMOUNT,RESERVED_AMOUNT,REALIZATION)
	VALUES ('BANDUNG','IDR',2223,1800000000,'OPEX',2000000000,'HOIT','PEMBELIAN ATK',1,12,2022,13,100000000,200000000,150000000)
ELSE
	UPDATE Promise_Budget SET BRANCH='BANDUNG',CURRENCY='IDR',GL_CODE=2123,REMAINING_BUDGET=1800000000,GL_GROUP_NAME='OPEX',MAX_AMOUNT=2000000000,COST_CENTER='HOIT',GL_NAME='PEMBELIAN ATK',GL_GROUP_CODE=1,PROKER_ID=12,BUDGET_YEAR=2022,BUDGET_MONTH=13,MIN_AMOUNT=100000000,RESERVED_AMOUNT=200000000,REALIZATION=150000000  WHERE GL_CODE =2223;
select @@IDENTITY
*/
/*
create trigger ENCTrg ON Promise_Budget
after insert,update
as
	begin
		set nocount on;
		select @@IDENTITY akhir
	end
*/

-- truncate table Promise_Budget
-- select * from Promise_Budget
-- select * from Decrypt_Promise_Budget

select cast(DECRYPTBYPASSPHRASE(N'uncal',0x02000000BEBFD5B356CC5E90ECF2F0DA58BE91003472A528D3C0DA4B625E70EDA9D406FF) as nvarchar(max)) hasil;


create trigger ENCInsertTrg ON Promise_Budget
after insert
as
	begin
		set nocount on;
		declare @IDRecord int;
		declare @Enc_MIN_AMOUNT VARBINARY(MAX)
		declare @Enc_MAX_AMOUNT VARBINARY(MAX)
		declare @Enc_RESERVED_AMOUNT VARBINARY(MAX)
		declare @Enc_REALIZATION VARBINARY(MAX)
		declare @Enc_REMAINING_BUDGET VARBINARY(MAX)
		declare @MIN_AMOUNT NVARCHAR(MAX)
		declare @MAX_AMOUNT NVARCHAR(MAX)
		declare @RESERVED_AMOUNT NVARCHAR(MAX)
		declare @REALIZATION NVARCHAR(MAX)
		declare @REMAINING_BUDGET NVARCHAR(MAX)
--		ambil last id inserted
		select @IDRecord=@@IDENTITY;
--		ambil plain value
		select @MIN_AMOUNT=MIN_AMOUNT,
				@MAX_AMOUNT=MAX_AMOUNT,
				@RESERVED_AMOUNT=RESERVED_AMOUNT,
				@REALIZATION = REALIZATION,
				@REMAINING_BUDGET=REMAINING_BUDGET
		from Promise_Budget where ID=@IDRecord;
--		encryp valuenya
		set @ENC_MIN_AMOUNT = ENCRYPTBYPASSPHRASE(N'uncal',@MIN_AMOUNT);
		set @ENC_MAX_AMOUNT = ENCRYPTBYPASSPHRASE(N'uncal',@MAX_AMOUNT);
		set @ENC_RESERVED_AMOUNT = ENCRYPTBYPASSPHRASE(N'uncal',@RESERVED_AMOUNT);
		set @ENC_REALIZATION = ENCRYPTBYPASSPHRASE(N'uncal',@REALIZATION);
		set @ENC_REMAINING_BUDGET = ENCRYPTBYPASSPHRASE(N'uncal',@REMAINING_BUDGET);
		
		update Promise_Budget set 
			MIN_AMOUNT=@ENC_MIN_AMOUNT,
			MAX_AMOUNT=@ENC_MAX_AMOUNT,
			RESERVED_AMOUNT=@ENC_RESERVED_AMOUNT,
			REALIZATION=@ENC_REALIZATION,
			REMAINING_BUDGET=@ENC_REMAINING_BUDGET
			where ID=@IDRecord
		
		
	end
-- =====================update======================

OUTPUT INSERTED.ID




	/*
alter table Promise_Budget
alter column REMAINING_BUDGET varbinary(MAX)
	*/


/*
exec SP_Promise_Budget (2123, 'PEMBELIAN ATK', 1, 'OPEX', 12, 'HOIT', 'BANDUNG', 'IDR', 1800000000,  2000000000, 2022, 13, 100000000, 200000000, 150000000)
	exec SP_Promise_Budget 2123 'PEMBELIAN ATK' 1 'OPEX' 12 'HOIT' 'BANDUNG' 'IDR' 1800000000  2000000000 2022 13 100000000 200000000 150000000
*/
exec SP_Promise_Budget 2123, 'PEMBELIAN ATK', 1, 'OPEX', 12, 'HOIT', 'BANDUNG', 'IDR', 1800000000,  2000000000, 2022, 13, 100000000, 200000000, 150000000
/*
CREATE PROCEDURE SP_Promise_Budget(
	@GL_CODE int,
	@GL_NAME varchar(100),
	@GL_GROUP_CODE int,
	@GL_GROUP_NAME varchar(50),
	@PROKER_ID int,
	@COST_CENTER varchar(50),
	@BRANCH varchar(50),
	@CURRENCY varchar(50),
	@MIN_AMOUNT varchar(50),
	@MAX_AMOUNT varchar(50),
	@BUDGET_YEAR int,
	@BUDGET_MONTH int,
	@RESERVED_AMOUNT varchar(50),
	@REALIZATION varchar(50),
	@REMAINING_BUDGET varchar(50))

AS
	declare @ENC_MIN_AMOUNT varbinary(100)
	declare @ENC_MAX_AMOUNT varbinary(100)
	declare @ENC_RESERVED_AMOUNT varbinary(100)
	declare @ENC_REALIZATION varbinary(100)
	declare @ENC_REMAINING_BUDGET varbinary(100)

	set @ENC_MIN_AMOUNT = ENCRYPTBYPASSPHRASE('uncal',@MIN_AMOUNT);
	set @ENC_MAX_AMOUNT = ENCRYPTBYPASSPHRASE('uncal',@MAX_AMOUNT);
	set @ENC_RESERVED_AMOUNT = ENCRYPTBYPASSPHRASE('uncal',@RESERVED_AMOUNT);
	set @ENC_REALIZATION = ENCRYPTBYPASSPHRASE('uncal',@REALIZATION);
	set @ENC_REMAINING_BUDGET = ENCRYPTBYPASSPHRASE('uncal',@REMAINING_BUDGET);

	IF NOT EXISTS(SELECT BRANCH,CURRENCY,GL_CODE,REMAINING_BUDGET,GL_GROUP_NAME,MAX_AMOUNT,COST_CENTER,GL_NAME,GL_GROUP_CODE,PROKER_ID,BUDGET_YEAR,BUDGET_MONTH,MIN_AMOUNT,RESERVED_AMOUNT,REALIZATION FROM Promise_Budget WHERE GL_CODE =@GL_CODE)
		INSERT INTO Promise_Budget(BRANCH,CURRENCY,GL_CODE,REMAINING_BUDGET,GL_GROUP_NAME,MAX_AMOUNT,COST_CENTER,GL_NAME,GL_GROUP_CODE,PROKER_ID,BUDGET_YEAR,BUDGET_MONTH,MIN_AMOUNT,RESERVED_AMOUNT,REALIZATION)
		VALUES (@BRANCH,@CURRENCY,@GL_CODE,@ENC_REMAINING_BUDGET,@GL_GROUP_NAME,@ENC_MAX_AMOUNT,@COST_CENTER,@GL_NAME,@GL_GROUP_CODE,@PROKER_ID,@BUDGET_YEAR,@BUDGET_MONTH,@ENC_MIN_AMOUNT,@ENC_RESERVED_AMOUNT,@ENC_REALIZATION)
	ELSE
		UPDATE Promise_Budget SET BRANCH=@BRANCH,CURRENCY=@CURRENCY,GL_CODE=@GL_CODE,REMAINING_BUDGET=@ENC_REMAINING_BUDGET,GL_GROUP_NAME=@GL_GROUP_NAME,MAX_AMOUNT=@ENC_MAX_AMOUNT,COST_CENTER=@COST_CENTER,GL_NAME=@GL_NAME,GL_GROUP_CODE=@GL_GROUP_CODE,PROKER_ID=@PROKER_ID,BUDGET_YEAR=@BUDGET_YEAR,BUDGET_MONTH=@BUDGET_MONTH,MIN_AMOUNT=@ENC_MIN_AMOUNT,RESERVED_AMOUNT=@ENC_RESERVED_AMOUNT,REALIZATION=@ENC_REALIZATION  WHERE GL_CODE =@GL_CODE;
*/

-- drop table Promise_Budget
CREATE TABLE [dbo].[Promise_Budget](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[GL_CODE] [int] NULL,
	[GL_NAME] [varchar](50) NULL,
	[GL_GROUP_CODE] [int] NULL,
	[GL_GROUP_NAME] [varchar](50) NULL,
	[PROKER_ID] [int] NULL,
	[COST_CENTER] [varchar](50) NULL,
	[BRANCH] [varchar](50) NULL,
	[CURRENCY] [varchar](50) NULL,
	[MIN_AMOUNT] [varbinary](max) NULL,
	[MAX_AMOUNT] [varbinary](max) NULL,
	[BUDGET_YEAR] [int] NULL,
	[BUDGET_MONTH] [int] NULL,
	[RESERVED_AMOUNT] [varbinary](max) NULL,
	[REALIZATION] [varbinary](max) NULL,
	[REMAINING_BUDGET] [varbinary](max) NULL
);

select * from Decrypt_Promise_Budget

alter view [dbo].[Decrypt_Promise_Budget] as

SELECT GL_CODE
      ,GL_NAME
      ,GL_GROUP_CODE
      ,GL_GROUP_NAME
      ,PROKER_ID
      ,COST_CENTER
      ,BRANCH
      ,CURRENCY
      ,cast(DECRYPTBYPASSPHRASE(N'uncal',MIN_AMOUNT) as NVARCHAR(max)) MIN_AMOUNT
      ,cast(DECRYPTBYPASSPHRASE(N'uncal',MAX_AMOUNT) as NVARCHAR(max)) MAX_AMOUNT
      ,BUDGET_YEAR
      ,BUDGET_MONTH
      ,cast(DECRYPTBYPASSPHRASE(N'uncal',RESERVED_AMOUNT) as NVARCHAR(max)) RESERVED_AMOUNT
      ,cast(DECRYPTBYPASSPHRASE(N'uncal',REALIZATION) as NVARCHAR(max)) REALIZATION
      ,cast(DECRYPTBYPASSPHRASE(N'uncal',REMAINING_BUDGET) as NVARCHAR(max)) REMAINING_BUDGET
  FROM Promise_Budget


 -- truncate table Promise_Budget

DECLARE @Data VARBINARY(MAX)
DECLARE @Text NVARCHAR(MAX) = N'300000'
DECLARE @Phrase NVARCHAR(100) = N'uncal'

SELECT @Data = ENCRYPTBYPASSPHRASE(@Phrase, @Text)

SELECT @Data AS [Encrypted_Data]

SELECT CAST(DECRYPTBYPASSPHRASE(@Phrase, @Data) AS NVARCHAR(MAX))
SELECT CAST(DECRYPTBYPASSPHRASE(N'uncal', 0x02000000D8069F567AB02D5AF52A0645E7583DAF1A4E862C7579D8ABF239CC47BC0488475ADBD9F8A75E9641E42108D0CE29F0EB048763CF9D697DABD7700CA0EAA31E87D2CF12FCEF4D15C769DFA6EB63167D2A) AS NVARCHAR(MAX))

insert into Promise_Budget(MIN_AMOUNT) values(ENCRYPTBYPASSPHRASE(N'uncal', N'2000'))

select * from Promise_Budget

SELECT MIN_AMOUNT,CAST(DECRYPTBYPASSPHRASE(N'uncal', 0x02000000C5BD07AB7218B3852013E0A3C23E1A45A123D298C295619EF45B8F3CCC07DDEA4304C2DFCAEDFEABEF9B7A872BB547A0) AS NVARCHAR(MAX)) from Promise_Budget